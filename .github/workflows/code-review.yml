name: PR Code Review with LLM

# Trigger the workflow when a pull request is opened or updated
on:
  pull_request_target:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    env:
      MODEL_NAME: "llama3.2:latest"
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Checks out the code from the pull request's head branch.
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      # Step 2: Fetch the base branch (e.g., main) from the remote repository
      - name: Fetch Base Branch
        run: |
          git fetch origin ${{ github.base_ref }}

      # Step 3: Generate the diff between the base branch and the PR branch
      - name: Generate Diff
        id: generate-diff
        run: |
          echo "Generating diff between ${{ github.base_ref }} and ${{ github.head_ref }}"
          git diff origin/${{ github.base_ref }}...${{ github.head_ref }} > changes.diff

      # Step 4: Upload the diff file as an artifact (optional)
      - name: Upload Diff as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-diff
          path: changes.diff

      # Step 5: Install Ollama
      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          ollama --version

      # Step 6: Pull the specified model
      - name: Pull Model
        run: |
          ollama pull ${{ env.MODEL_NAME }} || { echo "Failed to pull model"; exit 1; }
          ollama list

      # Step 7: Read the diff file and prepare the prompt for Ollama
      - name: Prepare Prompt
        id: prepare-prompt
        run: |
          DIFF=$(cat changes.diff)
          PROMPT=$(echo "Please review the following code changes and provide feedback:\n\n$DIFF\n\nFeedback:" | sed 's/"/\\"/g')
          echo "prompt=$PROMPT" >> $GITHUB_ENV

      # Step 8: Perform code review using Ollama
      - name: Code Review
        run: |
          RAW_RESPONSE=$(curl -s -X POST http://localhost:11434/api/generate \
            -d '{
                  "model": "'"${{ env.MODEL_NAME }}"'",
                  "prompt": "'"${{ env.prompt }}"'",
                  "temperature": 0.5,
                  "stream": false
                }' || { echo "API call failed"; exit 1; })
          echo "RAW RESPONSE:\n$RAW_RESPONSE"

      # Step 9: Optionally save the response as an artifact
      # - name: Save Response as Artifact
      #   run: |
      #     echo "$RAW_RESPONSE" > response.json
      #   if: always()